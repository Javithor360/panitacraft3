#################
# Panitacraft 3 #
#################

# Prefix that is going to be used in most of the plugin messages and various commands
# Supports any type of color codes but we highly recommend using MiniMessage formatting
prefix: "<b><gradient:#5900DD:#9E73DE:#5900DD>PANITACRAFT</gradient></b> <#393341>»</#393341><reset> "

# List of the events supported where you can customize its messages
events:
  # Color codes are supported in all messages
  # Also this is the list of available placeholders that you can include:
  # %PLAYER% - Player name
  playerFirstJoin:
    enabled: true
    broadcastMessage: "<#393341>Welcome to Panitacraft, <#9E73DE><player></#9E73DE><#393341>!<reset>"
  playerJoin:
    enabled: true
    broadcastMessage: "<#9E73DE>%PLAYER%</#9E73DE> <#393341>joined the server</#393341><reset>"
    motdMessage: "<#393341>Welcome back, <#9E73DE>%PLAYER%</#9E73DE>!</#393341><reset>"
  playerQuit:
    enabled: true
    broadcastMessage: "<#393341><#9E73DE>%PLAYER%</#9E73DE> left the server</#393341><reset>"

# This section represents the whole dynamic scaling difficulty system, be careful when changing this
# ---
# The difficulty system in Panitacraft is designed to dynamically scale in response to both
# server-wide progress and the context of nearby players. It determines how strong, fast, or
# smart mobs are based on several calculated layers of difficulty.
#
# There are three core difficulty layers:
#
# 1. CHRONOLOGIC DIFFICULTY (DG)
#    - Represents the server’s global progression over time.
#    - Increases slowly based on long-term world evolution, not individual players.
#    - Factors:
#        • Total in-game days since world creation.
#        • Number of online players relative to max capacity.
#        • Total number of currently loaded chunks across all worlds.
#        • Placeholder for global event modifiers (WIP)

# 2. INDIVIDUAL DIFFICULTY (DI)
#    - Represents the personal challenge level for each player.
#    - Calculated based on the player's stats, environment, and progression.
#    - Factors:
#        • Time since last death and last sleep (in hours).
#        • Total playtime in hours.
#        • Number of mobs killed.
#        • Number of deaths.
#        • XP level.
#        • Equipment strength (armor, weapons, enchantments).
#        • Biome danger level and dimension multiplier (Nether/End are more dangerous).

# 3. GROUP DIFFICULTY (DGp)
#    - Represents the average difficulty of nearby players (within a determined block radius).
#    - It’s the average of DI for all players in the context area.
#    - If no players are nearby, DGp is 0.
#
# AUTO-GENERATED DIFFICULTY
# This merges Chronologic + Group difficulty into a single value:
#     **BASE** Formula: [(DG * 0.4) + (DGp * 0.6)] * (1 + onlinePlayers)

# FINAL LOCAL DIFFICULTY
# The final difficulty used for mob scaling:
#     Formula: AutoGeneratedDifficulty * ManualMultiplier
#
# ManualMultiplier is a value you can set manually to increase or decrease the entire difficulty system.
# It defaults to 1.0 but can be modified using commands or from here directly.
# ---
# Be cautious: Raising the multiplier or global caps can drastically increase mob difficulty.
difficulty:
  # [BOOLEAN] Whether to enable the dynamic difficulty scaling system or not
  # When set to false, the difficulty system is disabled and mobs will behave normally (vanilla).
  # When true, all difficulty calculations will apply dynamically.
  # Default value: true
  enabled: true

  # [DOUBLE] The maximum auto-generated difficulty value allowed.
  # This is the cap used to clamp values across the system.
  # While the final difficulty may exceed this value (due to the multiplier),
  # it still controls the balance of internal calculations.
  # Recommended value: <= 500
  # Default value: 250.0
  max_difficulty_scale: 250.0

  # [DOUBLE] A global multiplier applied after the auto-generated difficulty is calculated.
  # It allows administrators to increase or decrease final difficulty regardless of player stats or world progress.
  # Example: A multiplier of 1.5 will make all mobs 50% stronger based on their base calculated difficulty.
  # Default value: 1.0
  multiplier: 1.0

  # [INTEGER] The number of blocks around an entity to consider nearby players for group difficulty (DGp).
  # The more players within this radius, the more influence they have on the group difficulty average.
  # Higher values will widen the context area and make mobs harder in multiplayer zones.
  # Default value: 128
  group_difficulty_radius: 128

  # This section contains the logic and parameters of the auto-generated difficulty system.
  # The auto-generated difficulty is the result of combining Chronological difficulty (DG)
  # and Group difficulty (DGp, the average of individual difficulties around a mob).
  auto_generated:
    # [DOUBLE] How much weight the chronological (server-wide) difficulty has in the final calculation.
    # !!! Formula: [(chronological * thisWeight) + (group * groupWeight)] * (1 + onlinePlayers) !!!
    # Total of both weights should ideally be 1.0
    chronological_weight_in_formula: 0.4

    # [DOUBLE] How much weight the group (nearby player average) difficulty has in the final calculation.
    group_weight_in_formula: 0.6

    # Settings for the CHRONOLOGICAL difficulty component (DG)
    chronological:
      # [INTEGER] Milliseconds to wait before recalculating the chronological difficulty.
      # Higher values improve performance but make the value update less frequently
      delay_between_checks: 10000

      # These are the core factors that influence the chronological difficulty.
      # Each is normalized between min/max before being multiplied by its weight.
      factors:
        # Represents the number of in-game days that have passed since world creation.
        world_days:
          weight: 0.3
          min: 0
          max: 5000
        # Current number of online players relative to server max capacity.
        # Available placeholders: %MAX_PLAYERS% (max players in server)
        online_players:
          weight: 0.2
          min: 0
          max: %MAX_PLAYERS%
        # Total number of currently loaded chunks in all worlds.
        # Reflects world exploration and infrastructure development.
        totalLoadedChunks:
          weight: 0.3
          min: 16
          max: 50000
        # Placeholder for special world events (WIP)
        event_penalty:
          weight: 0.2
    # Settings for the INDIVIDUAL difficulty component (DI), calculated per player
    # Each player’s stats and environment affect their individual score.
    individual:
      # These are the main stats taken from the player.
      # Each is normalized based on its min/max range and then multiplied by its weight.
      factors:
        # Time passed since the last player death, in hours.
        time_since_last_death:
          weight: 0.1
          min: 0.0
          max: 48
        # Time passed since the last player rest (bed usage), in hours.
        time_since_last_rest:
          weight: 0.1
          min: 0
          max: 12
        # Total playtime of the player, in hours.
        play_time_hours:
          weight: 0.4
          min: 0
          max: 250
        # Total number of hostile mobs the player has killed.
        mobs_killed:
          weight: 0.3
          min: 0
          max: 5000
        # Custom equipment scoring system (evaluates armor, enchantments, weapon power).
        equipment_score:
          weight: 0.5
          min: 0
          max: 500
        # Player XP level.
        xp_level:
          weight: 0.2
          min: 0
          max: 500
        # Total number of times the player has died.
        # This acts like a penalty, so it has a negative impact on difficulty.
        death_count:
          weight: 0.4
          min: 0
          max: 250
      # Biome + Dimension difficulty scaling.
      # These are applied as a multiplier to the final individual difficulty.
      # Some dimensions are naturally more dangerous than others.
      dimension_multiplier:
        overworld: 1.0
        nether: 1.75
        end: 1.5
        other: 1.25