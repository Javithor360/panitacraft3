package com.panita.panitacraft3.chat.commands.panitacraft.difficulty;

import com.panita.panitacraft3.difficulty.DifficultyService;
import com.panita.panitacraft3.difficulty.util.DifficultyConfig;
import com.panita.panitacraft3.util.chat.Messenger;
import com.panita.panitacraft3.util.commands.dynamic.AdvancedCommand;
import com.panita.panitacraft3.util.commands.identifiers.SubCommandSpec;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

@SubCommandSpec(
        parent = "panitacraft difficulty",
        name = "status",
        description = "Check the status of the dynamic difficulty system.",
        syntax = "/panitacraft difficulty status"
)
public class StatusCommand implements AdvancedCommand {

    @Override
    public void execute(CommandSender sender, String[] args) {
        if (!(sender instanceof Player player)) {
            Messenger.prefixedSend(sender, "<red>Solo los jugadores pueden usar este comando.</red>");
            return;
        }

        double max = DifficultyConfig.getMaxDifficultyScale();
        double auto = DifficultyService.getAutoGeneratedDifficulty(player.getLocation());
        double multiplier = DifficultyService.getManualDifficultyMultiplier();
        double total = auto * multiplier;

        String bar = generateBar(total, max);
        String warning = total > max ? " <red>âš </red>" : "";

        Messenger.prefixedSend(player, "<gray>Dificultad:</gray> <green>" + fmt(total) + "</green> / <white>" + fmt(max) + "</white>" + warning);
        Messenger.prefixedSend(player, bar);
        if (multiplier != 1.0) Messenger.prefixedSend(player, "<gray>Multiplicador activado:</gray> <white>x" + fmt(multiplier) + "</white>");
    }

    private String fmt(double value) {
        return String.format("%.2f", value);
    }

    private String generateBar(double value, double max) {
        int segments = 10;
        double ratio = Math.min(value / max, 1.0); // Cap at 100%
        int filled = (int) Math.round(ratio * segments);
        int empty = segments - filled;

        StringBuilder bar = new StringBuilder();

        String color = getColor(ratio);
        bar.append(color).append(DifficultyConfig.getFilledIcon().repeat(filled));
        bar.append("<gray>").append(DifficultyConfig.getEmptyIcon().repeat(empty));

        int percent = (int) (ratio * 100);
        bar.append("</gray> <gray>(").append(percent).append("%)</gray>");

        return bar.toString();
    }

    private String getColor(double ratio) {
        if (ratio < 0.4) return "<green>";
        if (ratio < 0.7) return "<yellow>";
        return "<red>";
    }
}
