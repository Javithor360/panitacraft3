package com.panita.panitacraft3.chat.commands.panitacraft.difficulty;

import com.panita.panitacraft3.difficulty.DifficultyService;
import com.panita.panitacraft3.difficulty.calculators.EquipmentScoreCalculator;
import com.panita.panitacraft3.difficulty.calculators.GlobalDifficultyCalculator;
import com.panita.panitacraft3.util.Global;
import com.panita.panitacraft3.util.chat.Messenger;
import com.panita.panitacraft3.util.commands.dynamic.AdvancedCommand;
import com.panita.panitacraft3.util.commands.identifiers.SubCommandSpec;
import org.bukkit.Bukkit;
import org.bukkit.Statistic;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

@SubCommandSpec(
        parent = "panitacraft",
        name = "difficulty trace",
        description = "Displays a detailed report of the current difficulty settings.",
        syntax = "/panitacraft difficulty trace",
        permission = "panitacraft.admin.command.panitacraft.difficulty.report"
)
public class ReportCommand implements AdvancedCommand {
    @Override
    public void execute(CommandSender sender, String[] args) {
        if (!(sender instanceof Player player)) {
            Messenger.prefixedSend(sender, "<red>Este comando solo puede ser ejecutado por jugadores.</red>");
            return;
        }

        // ========= SECCI√ìN GLOBAL =========
        double dg = DifficultyService.getGlobalDifficulty();
        int days = Bukkit.getWorlds().getFirst().getFullTime() > 0
                ? (int) (Bukkit.getWorlds().getFirst().getFullTime() / 24000) : 0;

        double worldDaysNorm = Global.normalize(days, 0, 56000);
        double onlinePlayersNorm = Global.normalize(Bukkit.getOnlinePlayers().size(), 0, Bukkit.getMaxPlayers());
        double avgBiomeDanger = GlobalDifficultyCalculator.getAverageBiomeDanger();
        double globalPenalty = GlobalDifficultyCalculator.getGlobalEventPenalty();

        // ========= SECCI√ìN INDIVIDUAL =========
        long playtimeTicks = player.getStatistic(Statistic.PLAY_ONE_MINUTE);
        double playtimeSecs = playtimeTicks / 20.0;
        double playtimeNorm = Global.normalize(playtimeSecs, 0, 250 * 3600);

        int deaths = player.getStatistic(Statistic.DEATHS);
        double deathsNorm = Global.normalize(deaths, 0, 250);

        int xpLevel = player.getLevel();
        double levelNorm = Global.normalize(xpLevel, 0, 500);

        int equipmentScore = EquipmentScoreCalculator.calculate(player);
        double equipmentNorm = Global.normalize(equipmentScore, 0, 500);

        double di = DifficultyService.getIndividualDifficulty(player);
        double dgP = DifficultyService.getGroupDifficulty(player.getLocation());
        double autoGenerated = DifficultyService.getAutoGeneratedDifficulty(player.getLocation());
        double multiplier = DifficultyService.getManualDifficultyMultiplier();
        double total = DifficultyService.getTotalDifficulty(player.getLocation());

        // ========= VISUAL OUTPUT =========
        Messenger.send(player, "<gray>========[ <gradient:#9E73DE:#5900DD>Dificultad - Reporte Detallado</gradient> ]========</gray>");
        Messenger.send(player, "<gold>üåç DIFICULTAD GLOBAL</gold>");
        Messenger.send(player, " <gray>F√≥rmula:</gray> (<white>D√≠as</white>*0.4 + <white>Jugadores</white>*0.3 + <white>Bioma</white>*0.15 + <white>Eventos</white>*0.15)");
        Messenger.send(player, " <yellow>D√≠as del mundo:</yellow> <aqua>" + days + "</aqua> <gray>(Norm:</gray> " + fmt(worldDaysNorm) + ")");
        Messenger.send(player, " <yellow>Jugadores:</yellow> <aqua>" + Bukkit.getOnlinePlayers().size() + "/" + Bukkit.getMaxPlayers() + "</aqua> <gray>(Norm:</gray> " + fmt(onlinePlayersNorm) + ")");
        Messenger.send(player, " <yellow>Peligro promedio de bioma:</yellow> <aqua>" + fmt(avgBiomeDanger) + "</aqua>");
        Messenger.send(player, " <yellow>Penalizaci√≥n por eventos:</yellow> <aqua>" + globalPenalty + "</aqua>");
        Messenger.send(player, " <green>Dificultad Global:</green> <white>" + fmt(dg) + "</white>");
        Messenger.send(player, "");
        Messenger.send(player, "<gold>üë§ DIFICULTAD INDIVIDUAL</gold>");
        Messenger.send(player, " <gray>F√≥rmula:</gray> (playtime*0.4 + equip*0.3 + xp*0.2 - deaths*0.3)");
        Messenger.send(player, " ‚è± <yellow>Tiempo jugado:</yellow> <aqua>" + fmt(playtimeSecs / 60) + " mins</aqua> <gray>(Norm:</gray> " + fmt(playtimeNorm) + ")");
        Messenger.send(player, " üõ° <yellow>Puntuaci√≥n de equipo:</yellow> <aqua>" + equipmentScore + "</aqua> <gray>(Norm:</gray> " + fmt(equipmentNorm) + ")");
        Messenger.send(player, " üéì <yellow>Nivel XP:</yellow> <aqua>" + xpLevel + "</aqua> <gray>(Norm:</gray> " + fmt(levelNorm) + ")");
        Messenger.send(player, " üíÄ <yellow>Muertes:</yellow> <aqua>" + deaths + "</aqua> <gray>(Norm:</gray> " + fmt(deathsNorm) + ")");
        Messenger.send(player, " <green>Dificultad Individual:</green> <white>" + fmt(di) + "</white>");
        Messenger.send(player, "");
        Messenger.send(player, "<gold>üë• DIFICULTAD GRUPAL</gold>");
        Messenger.send(player, " <gray>Promedio de DI de jugadores cercanos</gray>");
        Messenger.send(player, " <green>Dificultad Grupal:</green> <white>" + fmt(dgP) + "</white>");
        Messenger.send(player, "");
        Messenger.send(player, "<gold>üß† DIFICULTAD AUTOGENERADA</gold>");
        Messenger.send(player, " <gray>F√≥rmula:</gray> [(DG * 0.4) + (DGp * 0.6)] * (1 + playersOnline)");
        Messenger.send(player, " <green>AutoGenerada:</green> <white>" + fmt(autoGenerated) + "</white>");
        Messenger.send(player, "");
        Messenger.send(player, "<gold>üí• DIFICULTAD FINAL</gold>");
        Messenger.send(player, " <gray>F√≥rmula:</gray> autogenerada * multiplicador");
        Messenger.send(player, " <yellow>Multiplicador:</yellow> <aqua>" + fmt(multiplier) + "x</aqua>");
        Messenger.send(player, " <green>Total:</green> <gradient:#ff5f6d:#ffc371>" + fmt(total) + "</gradient>");
        Messenger.send(player, "");
        Messenger.send(player, "<gray>============================================</gray>");
    }

    private String fmt(double num) {
        return String.format("%.2f", num);
    }
}
